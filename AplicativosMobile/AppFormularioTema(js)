import { useState } from 'react';
import {StyleSheet,Text,View,TouchableOpacity,TextInput}
from 'react-native';

import { Picker } from '@react-native-picker/picker';
import Slider from '@react-native-community/slider';
import { Switch, RadioButton } from 'react-native-paper';

export default function App() {
  const [nomeCliente, setNomeCliente] = useState('');
  const [pedido, setPedido] = useState(0);
  const [valor, setValor] = useState(0);
  const [checked, setChecked] = useState('entregar');

  const isWeb = typeof navigator !== 'undefined' && navigator.userAgent;

  const pedidos = [
    { pedidoNome: 'pão frances (unid)', valor: 1 },
    { pedidoNome: 'torta de morango (unid)', valor: 2 },
    { pedidoNome: 'torta de limão (unid)', valor: 3 },
    { pedidoNome: 'mortadela (gram)', valor: 4 },
    { pedidoNome: 'queijo mussarela (gram)', valor: 5 },
    { pedidoNome: 'presunto (gram)', valor: 6 }
  ]

  let pedidoItems = modelos.map((v, k) => {
    return <Picker.Item key={k} value={k} label={v.pedidoNome}> </Picker.Item>
  });

  function enviarDados() {
    if (nomeCliente === '' || pedido === '') {
      alert('Pedido incompletp,preencha todos os campos');
      return;
    }

    alert(
      'Veja as informações do pedido : \n\n' +
        'Nome do cliente: ' + nomeCliente + '\n' +
        'Pedido: ' + pedidos[pedido].pedidoNome + '\n' +
        'Valor: R$ ' + valor.toFixed(2) + '\n' +
        'Carro utilitário: ' + (utilitario ? 'Sim' : 'Não')
    );
  }

  return (
    <View style={styles.container}>
      <Text style={styles.titulo}>Informações do Carro Particular</Text>
      <View style={styles.areaformulario}>
        <Text style={styles.textoNome}>Nome Pessoa:</Text>
        <TextInput
          style={styles.input}
          placeholder="Digite seu nome aqui"
          onChangeText={setNome}
        ></TextInput>

        <View style={styles.areaRadio}>
          <RadioButton
            value="Masculino"
            status={checked === 'Masculino' ? 'checked' : 'unchecked'}
            onPress={() => setChecked('Masculino')}
          />
          <Text>Masculino</Text>

          <RadioButton
            value="Feminino"
            status={checked === 'Feminino' ? 'checked' : 'unchecked'}
            onPress={() => setChecked('Feminino')}
          ></RadioButton>
          <Text>Feminino</Text>
        </View>

        <Text style={styles.textoNome}>Nome Carro:</Text>
        <TextInput
          style={styles.input}
          placeholder="Digite o nome do carro"
          onChangeText={setCarro}
        ></TextInput>

        <Text style={styles.textoNome}>Placa do Carro:</Text>
        <TextInput
          style={styles.input}
          placeholder="Digite a placa do carro"
          onChangeText={setPlaca}
        ></TextInput>

        <View style={styles.areaModelo}>
          <Text style={styles.textoNome}>Modelo:</Text>
          <Picker
            style={styles.pickerModelo}
            selectedValue={modelo}
            onValueChange={(itemValue) => setModelo(itemValue)}
          >
            {modeloItems}
          </Picker>
        </View>

        <View style={styles.valorArea}>
          <Text style={styles.textoNome}>Valor do carro:</Text>
          <Text style={styles.valorTexto}>R$ {valor.toFixed(0)}</Text>
        </View>

        <View style={styles.areaSlider}>
          <Slider
            maximumTrackTintColor="#ccc"
            minimumValue={15000}
            maximumValue={240000}
            value={valor}
            onValueChange={setValor}
          ></Slider>
        </View>

        <View style={styles.areaUtilitario}>
          <Text style={styles.textoNome}>Utilitário</Text>
          <Switch
            style={isWeb ? { transform: [{ translateY: -2 }] } : {}}
            trackColor={{ false: '#ccc', true: 'rgb(87, 252, 92)'}}
            thumbColor="#432"
            value={utilitario}
            onValueChange={(value) => setUtilitario(value)}
          ></Switch>

          <TouchableOpacity style={styles.botao} onPress={enviarDados}>
            <Text style={styles.botaoTexto}>Mostrar Dados Carros</Text>
          </TouchableOpacity>
        </View>
      </View>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    paddingTop: 20,
    backgroundColor: '#32B76C',
  },
  areaformulario: {
    flexDirection: 'column',
    margin: 10,
  },
  textoNome: {
    fontSize: 17,
    color: '#000000',
    fontWeight: 'bold',
  },
  areaModelo: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingBottom: 5,
  },
  pickerModelo: {
    flex: 1
  },
  valorArea: {
    flexDirection: 'row',
    paddingBottom: 5,
  },
  valorTexto: {
    color: '#FF0000',
    fontSize: 17,
    fontWeight: 'bold',
    paddingLeft: 5,
  },
  areaSlider: {
    marginBottom: 10,
  },
  areaUtilitario: {
    flexDirection: 'column',
    alignItems: 'center',
  },
  areaRadio: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  botao: {
    backgroundColor: 'green',
    width: '60%',
    alignSelf: 'center',
    height: 50,
    justifyContent: 'center',
    alignItems: 'center',
    borderRadius: 10,
    marginTop: 10,
    marginBottom: 20,
  },
  botaoTexto: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#FFFFFF',
  },
  input: {
    borderWidth: 0.5,
    borderColor: '#000',
    width: '90%',
    borderRadius: 5,
    padding: 10,
    marginBottom: 5,
    justifyContent: 'center',
    marginHorizontal: 5,
    alignSelf: 'center',
    backgroundColor: '#fff',
    height: 45,
  },
  titulo: {
    fontSize: 22,
    color: '#000',
    marginLeft: 23,
    marginTop: 15,
    fontWeight: 'bold',
  },
});
